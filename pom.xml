<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="             http://maven.apache.org/POM/4.0.0             https://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.0</version>
  </parent>

  <groupId>pro.vlapin.experiments</groupId>
  <artifactId>jsonplacaholder-client</artifactId>
  <version>${revision}</version>

  <properties>

    <!--region general-->
    <java.version>21</java.version>
    <revision>0.0.1</revision>
    <spring-boot.version>3.2.0</spring-boot.version>
    <sourceDirectory>src/main/java</sourceDirectory>
    <lombok.outputDirectory>target/generated-sources/delomboked</lombok.outputDirectory>
    <!--endregion-->

    <!--region BOM-->
    <spring-cloud-starter-parent.version>2023.0.0-RC1</spring-cloud-starter-parent.version>
    <!--endregion-->

    <!--region libs-->
    <springdoc-openapi.version>2.2.0</springdoc-openapi.version>
    <checker.version>3.40.0</checker.version>
    <annotations.version>24.1.0</annotations.version>
    <jcip-annotations.version>1.0</jcip-annotations.version>
    <spotbugs.version>4.8.2</spotbugs.version>
    <error_prone_annotations.version>2.23.0</error_prone_annotations.version>
    <!--endregion-->

    <!--region plugins-->
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
    <flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
    <minimal.maven.version>3.9.6</minimal.maven.version>
    <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
    <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.1.0</spotbugs-maven-plugin.version>
    <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
    <!--endregion-->

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-parent</artifactId>
        <version>${spring-cloud-starter-parent.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!--region SpringDoc OpenAPI-->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <!--endregion-->

      <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${checker.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>${jcip-annotations.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>
    <!--endregion-->

    <!--region SpringDoc OpenAPI-->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-common</artifactId>
    </dependency>
    <!--endregion-->

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
      <version>5.7.8</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${sourceDirectory}</sourceDirectory>
    <defaultGoal>verify</defaultGoal>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <!--<arg>-parameters</arg> &lt;!&ndash;<maven.compiler.parameters>true</maven.compiler.parameters>&ndash;&gt;-->
              <!--<arg>&#45;&#45;enable-preview</arg> &lt;!&ndash;maven.compiler.enablePreview&ndash;&gt;-->
              <!--<arg>-Xlint:preview</arg>--></compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker</artifactId>
                <version>${checker.version}</version>
              </path>
              <path>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
              </path>
            </annotationProcessorPaths>
            <annotationProcessors>
              <annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</annotationProcessor>
              <annotationProcessor>lombok.launch.AnnotationProcessorHider$ClaimingProcessor</annotationProcessor>
              <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
              <annotationProcessor>org.checkerframework.checker.interning.InterningChecker</annotationProcessor>
              <annotationProcessor>org.checkerframework.checker.fenum.FenumChecker</annotationProcessor>
              <annotationProcessor>org.checkerframework.checker.formatter.FormatterChecker</annotationProcessor>
              <annotationProcessor>org.checkerframework.checker.regex.RegexChecker</annotationProcessor>
              <annotationProcessor>org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor</annotationProcessor>
            </annotationProcessors>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>--enable-preview</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>flatten:process-resources:flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten.clean:clean:clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${minimal.maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
            <!--suppress MavenModelInspection, UnresolvedMavenProperty -->
            <rulesUri>file://${maven.multiModuleProjectDirectory}/ruleset.xml</rulesUri>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>jacoco-initialize:verify:prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- Property containing settings for JaCoCo runtime agent -->
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <!-- Ensures unit test coverage report is created after running tests -->
            <execution>
              <id>post-unit-test:test:report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <!-- Property for JaCoCo runtime agent, passed to Failsafe plugin -->
            <execution>
              <id>pre-integration-test:pre-integration-test:prepare-agent</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test:post-integration-test:report</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <!--https://spotbugs.github.io/spotbugs-maven-plugin/usage.html-->
            <effort>Max</effort>
            <threshold>Low</threshold>
            <xmlOutput>true</xmlOutput>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources:package:jar-no-fork</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <executions>
            <execution>
              <id>delombok-sources:process-sources:run</id>
              <phase>process-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-sources">
                  <property name="maven.classpath" refid="maven.compile.classpath"/>
                  <!--suppress MavenModelInspection-->
                  <mkdir dir="${lombok.outputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                      <pathelement path="${maven.classpath}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.sourceDirectory}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection-->
                    <arg value="${lombok.outputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution>
            <execution>
              <id>delombok-test-sources:process-test-sources:run</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-test-sources">
                  <property name="maven.classpath" refid="maven.test.classpath"/>
                  <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                  <mkdir dir="${lombok.testOutputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                      <pathelement path="${maven.classpath}"/>
                      <!--suppress MavenModelInspection-->
                      <pathelement path="${lombok.outputDirectory}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.testSourceDirectory}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.testOutputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution>
            <execution>
              <id>delombok-cleaning:verify:run</id>
              <phase>verify</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="cleanup-openapi-dir">
                  <!--suppress MavenModelInspection-->
                  <delete dir="${lombok.outputDirectory}"/>
                  <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                  <delete dir="${lombok.testOutputDirectory}"/>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>it.ozimov</groupId>
          <artifactId>yaml-properties-maven-plugin</artifactId>
          <version>${yaml-properties-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <!--suppress MavenModelInspection, UnresolvedMavenProperty-->
                  <file>${maven.multiModuleProjectDirectory}/maven.yml</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <modelVersion>4.0.0</modelVersion>
</project>
